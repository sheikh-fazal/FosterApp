import { RHFCheckbox, RHFSelect, RHFTextField } from "@root/components/hook-form";
import RHFDatePicker from "@root/components/hook-form/RHFDatePicker";
import * as Yup from "yup";

export const ApprovedDetailsFormData = [
  {
    id: 1,
    componentProps: {
      name: "carerCode",
      label: "Carer Code",
      sx: { mb: 4 },
    },
    component: RHFTextField,
    md: 6,
  },
  {
    id: 2,
    componentProps: {
      name: "referredBy",
      label: "Referred By",
      fullWidth: true,
      size: "small",
      sx: { mb: 4 },
    },
    component: RHFTextField,
    md: 6,
  },
  {
    id: 3,
    gridLength: 6,
    componentProps: { name: "referralDate", label: "Referral Date", fullWidth: true, sx: { mb: 4 }, },
    component: RHFDatePicker,
    md: 6,
  },
  {
    id: 4,
    componentProps: {
      name: "approvedBy",
      label: "Approved By",
      fullWidth: true,
      select: true,
      sx: { mb: 4 },
    },
    options: [
      { value: "Hayes", label: "Hayes" },
    ],
    component: RHFSelect,
    md: 6,
  },
  {
    id: 5,
    componentProps: {
      name: "carerGeography",
      label: "Carer Geography",
      fullWidth: true,
      select: true,
      sx: { mb: 4 },
    },
    options: [
      { value: "Hayes", label: "Hayes" },
    ],
    component: RHFSelect,
    md: 6,
  },
  {
    id: 6,
    componentProps: {
      name: "localAuthority",
      label: "Local Authority",
      fullWidth: true,
      select: true,
      sx: { mb: 4 },
    },
    options: [
      { value: "Hayes", label: "Hayes" },
    ],
    component: RHFSelect,
    md: 6,
  },
  {
    id: 7,
    gridLength: 6,
    componentProps: { name: "requestDateNotified", label: "Request Date Notified", fullWidth: true, sx: { mb: 4 }, },
    component: RHFDatePicker,
    md: 6,
  },
  {
    id: 8,
    componentProps: {
      name: "branchManagerEmail",
      label: "Branch Manager Email",
      fullWidth: true,
      sx: { mb: 4 },
    },
    component: RHFTextField,
    md: 6,
  },
  {
    id: 9,
    componentProps: {
      name: "branchAddress",
      label: "Branch Address",
      multiline: true,
      minRows: 3,
      sx: { mb: 4 },
    },
    component: RHFTextField,
    md: 12,
  },
  {
    id: 10,
    componentProps: {
      name: "branchManagerName",
      label: "Branch Manager Name",
      fullWidth: true,
      size: "small",
      sx: { mb: 4 },
    },
    component: RHFTextField,
    md: 6,
  },
  {
    id: 11,
    componentProps: {
      name: "branchManagerTelephone",
      label: "Branch Manager Telephone",
      fullWidth: true,
      size: "small",
      sx: { mb: 4 },
    },
    component: RHFTextField,
    md: 6,
  },
  {
    id: 12,
    componentProps: {
      name: "areaTeam",
      label: "Area Team",
      fullWidth: true,
      size: "small",
      sx: { mb: 4 },
    },
    component: RHFTextField,
    md: 6,
  },
  {
    id: 13,
    componentProps: {
      name: "eDTNumber",
      label: "EDT Number",
      fullWidth: true,
      size: "small",
      sx: { mb: 4 },
    },
    component: RHFTextField,
    md: 6,
  },
  {
    id: 14,
    componentProps: {
      name: "behavioural",
      label: "Behavioural",
      multiline: true,
      minRows: 3,
      sx: { mb: 4 },
    },
    component: RHFTextField,
    md: 12,
  },
  {
    id: 15,
    componentProps: {
      name: "otherDetails",
      label: "Other Details",
      multiline: true,
      minRows: 3,
      sx: { mb: 4 },
    },
    component: RHFTextField,
    md: 12,
  },
  {
    id: 16,
    componentProps: {
      name: "priorPlacementDetails",
      label: "Prior Placement Details",
      multiline: true,
      minRows: 3,
      sx: { mb: 4 },
    },
    component: RHFTextField,
    md: 12,
  },
  {
    id: 17,
    componentProps: {
      name: "recommendedChild",
      label: "Recommended Child",
      multiline: true,
      minRows: 3,
      sx: { mb: 4 },
    },
    component: RHFTextField,
    md: 12,
  },
  {
    id: 18,
    componentProps: {
      name: "localAuthority",
      label: "Local Authority",
      fullWidth: true,
      select: true,
      sx: { mb: 4 },
    },
    options: [
      { value: "Hayes", label: "Hayes" },
    ],
    component: RHFSelect,
    md: 6,
  },
  {
    id: 19,
    gridLength: 6,
    componentProps: {
      name: "siblingChild",
      label: "foster Sibling Child ?",
      sx: { mb: 4 },
    },
    component: RHFCheckbox,
    md: 2,
  },
  {
    id: 19,
    gridLength: 6,
    componentProps: {
      name: "noFurtherAction",
      label: "No Further Action (Move to Closed Referral)",
      sx: { mb: 4 },
    },
    component: RHFCheckbox,
    md: 4,
  },
]

export const ApprovedDetailsFormValues = {
  carerCode: "",
  referredBy: "",
  referralDate: new Date(),
  approvedBy: "",
  carerGeography: "",
  requestDateNotified: '',
  branchManagerEmail: "",
  branchAddress: "",
  branchManagerName: "",
  branchManagerTelephone: "",
  areaTeam: "",
  eDTNumber: "",
  behavioural: "",
  otherDetails: "",
  priorPlacementDetails: "",
  recommendedChild: "",
  localAuthority: "",
  siblingChild: "",
  noFurtherAction: "",
};

export const ApprovedDetailsFormValidationSchema = Yup.object().shape({
  carerCode: Yup.string().trim().required("Field is Required"),
  referredBy: Yup.string().trim().required("Field is Required"),
  referralDate: Yup.date().required("Field is Required"),
  approvedBy: Yup.string().trim().required("Field is Required"),
  carerGeography: Yup.string().trim().required("Field is Required"),
  requestDateNotified: Yup.string().trim().required("Field is Required"),
  branchManagerEmail: Yup.string().trim().required("Field is Required"),
  branchAddress: Yup.string().trim().required("Field is Required"),
  branchManagerName: Yup.string().trim().required("Field is Required"),
  branchManagerTelephone: Yup.string().trim().required("Field is Required"),
  areaTeam: Yup.string().trim().required("Field is Required"),
  eDTNumber: Yup.string().trim().required("Field is Required"),
  behavioural: Yup.string().trim().required("Field is Required"),
  otherDetails: Yup.string().trim().required("Field is Required"),
  priorPlacementDetails: Yup.string().trim().required("Field is Required"),
  recommendedChild: Yup.string().trim().required("Field is Required"),
  localAuthority: Yup.string().trim().required("Field is Required"),
  // siblingChild: Yup.string().trim().required("Field is Required"),
  // noFurtherAction: Yup.string().trim().required("Field is Required"),
});

export { default as ApprovedDetailsForm } from "./ApprovedDetailsForm";