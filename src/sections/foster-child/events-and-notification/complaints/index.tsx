import { RHFSelect, RHFTextField } from "@root/components/hook-form";
import RHFDatePicker from "@root/components/hook-form/RHFDatePicker";
import RHFRadioGroupBoolean from "@root/components/hook-form/RHFRadioGroupBoolean";
import * as Yup from "yup";
export const Dummy = [
  {
    // dateofComplaints:"02:30:20",
    Status: "panding",
  },
];

export const ComplaintsData = [
  {
    id: 0,
    gridLength: 6,
    otherOptions: {
      label: "URN NUMBER",
      name: "urnNumber",
      multiline: false,
      minRows: 3,
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 1,
    gridLength: 6,
    otherOptions: {
      label: "Complaints against person category",
      name: "complaintAgainstPersonCategory",
      fullWidth: true,
      select: true,
      options: [{ value: "nil", label: "Request for Single Data" }],
    },
    component: RHFSelect,
  },

  {
    id: 2,
    gridLength: 6,
    otherOptions: {
      label: "Complaints against person",
      name: "complaintAgainstPerson",
      fullWidth: true,
      select: true,
      options: [{ value: "nil", label: "Request for Single Data" }],
    },
    component: RHFSelect,
  },
  {
    id: 3,
    gridLength: 6,
    otherOptions: {
      label: "Complaints Date",
      name: "complaintDate",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 4,
    gridLength: 6,
    otherOptions: {
      label: "Agency reported Date",
      name: "agencyReportedDate",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 5,
    gridLength: 6,
    otherOptions: {
      label: "Review Date",
      name: "reviewDate",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 6,
    gridLength: 12,
    otherOptions: {
      label: "Nature of Complaints",
      name: "natureOfComplaint",
      multiline: true,
      minRows: 3,
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 7,
    gridLength: 6,
    otherOptions: {
      label: "Person Notified to Agency",
      name: "personNotifiedAgency",
      multiline: false,
      // minRows: 3,
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 8,
    gridLength: 6,
    otherOptions: {
      label: "Person Completing Report",
      name: "personCompletingReport",
      multiline: false,
      // minRows: 3,
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 9,
    gridLength: 6,
    otherOptions: {
      label: "Agency Social worker Involved:",
      name: "agencySocialWorkerInvolved",
      multiline: false,
      //minRows: 3,
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 10,
    gridLength: 6,
    otherOptions: {
      label: "Child Local Authority",
      name: "childLocalAuthority",
      fullWidth: true,
      select: true,
      options: [{ value: "nil", label: "Request for Single Data" }],
    },
    component: RHFSelect,
  },
  {
    id: 11,
    gridLength: 6,
    otherOptions: {
      label: "Carer Local Authority",
      name: "carerLocalAuthority",
      fullWidth: true,
      select: true,
      options: [{ value: "nil", label: "Request for Single Data" }],
    },
    component: RHFSelect,
  },
  {
    id: 12,
    gridLength: 12,
    otherOptions: {
      label: "Complaints Details",
      name: "complaintDetails",
      multiline: true,
      minRows: 3,
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 13,
    gridLength: 12,
    otherOptions: {
      label: "Investigation Undertaken",
      name: "investigationUndertaken",
      multiline: true,
      minRows: 3,
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 14,
    gridLength: 12,
    otherOptions: {
      label: "Independent Support Offered Info:",
      name: "independentSupportInfo",
      multiline: true,
      minRows: 3,
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 16,
    gridLength: 12,
    otherOptions: {
      label: "Agency Action Taken:",
      name: "agencyActionTaken",
      multiline: true,
      minRows: 3,
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 17,
    gridLength: 12,
    otherOptions: {
      label: "Complaints Outcome:",
      name: "complaintOutcome",
      multiline: true,
      minRows: 3,
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 18,
    gridLength: 6,
    otherOptions: {
      label: "Is This substantiated",
      name: "isThisSubstained",
      fullWidth: true,
      select: true,
      options: [{ value: "nil", label: "Request for Single Data" }],
    },
    component: RHFSelect,
  },
  {
    id: 19,
    gridLength: 12,
    otherOptions: {
      label: "Team Manger Recommendation",
      name: "teamManagerRecommendation",
      multiline: true,
      minRows: 3,
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 21,
    gridLength: 6,
    otherOptions: {
      label: "Has Registered Manger Informed",
      name: "hasRegisteredManagerInformed",
    },

    component: RHFRadioGroupBoolean,
  },
  {
    id: 21,
    gridLength: 6,
    otherOptions: {
      label: "Registered Manager informed Date",
      name: "registeredManagerInformedDate",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 22,
    gridLength: 6,
    otherOptions: {
      label: "Has ofsted been Informed",
      name: "hasOfstedBeenInformed",
    },

    component: RHFRadioGroupBoolean,
  },
  {
    id: 21,
    gridLength: 6,
    otherOptions: {
      label: "OFSTED Notified Date",
      name: "ofstedNotifiedDate",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 22,
    gridLength: 6,
    otherOptions: {
      label: "Is Schedule 7",
      name: "isSchedule",
    },

    component: RHFRadioGroupBoolean,
  },
  {
    id: 23,
    gridLength: 12,
    otherOptions: {
      label: "Reported To",
      name: "reportedTo",
      multiline: true,
      minRows: 3,
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 24,
    gridLength: 12,
    otherOptions: {
      label: "Registered Manger Recommendation:",
      name: "registeredManagerRecommendation",
      multiline: true,
      minRows: 3,
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 25,
    gridLength: 6,
    otherOptions: {
      label: "Closure Date",
      name: "closureDate",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 26,
    gridLength: 6,
    otherOptions: {
      label: "Next Alert Date",
      name: "nextAlertDate",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
];
export const ComplaintsDataValue = {
  urnNumber: "",
  complaintAgainstPersonCategory: "",
  complaintAgainstPerson: "",
  complaintDate: new Date(),
  agencyReportedDate: new Date(),
  reviewDate: new Date(),
  natureOfComplaint: "",
  personNotifiedAgency: "",
  personCompletingReport: "",
  agencySocialWorkerInvolved: "",
  childLocalAuthority: "",
  carerLocalAuthority: "",
  complaintDetails: "",
  investigationUndertaken: "",
  independentSupportInfo: "",
  agencyActionTaken: "",
  complaintOutcome: "",
  isThisSubstained: "",
  teamManagerRecommendation: "",
  hasRegisteredManagerInformed: false,
  registeredManagerInformedDate: new Date(),
  hasOfstedBeenInformed: false,
  ofstedNotifiedDate: new Date(),
  isSchedule: false,
  reportedTo: "",
  registeredManagerRecommendation: "",
  closureDate: new Date(),
  nextAlertDate: new Date(),
};
export const FormSchema = Yup.object().shape({
  urnNumber: Yup.string().required("required"),
  complaintAgainstPersonCategory: Yup.string().required("required"),
  complaintAgainstPerson: Yup.string().required("required"),
  complaintDate: Yup.date().required("required"),
  agencyReportedDate: Yup.date().required("required"),
  reviewDate: Yup.date().required("required"),
  natureOfComplaint: Yup.string().required("required"),
  personNotifiedAgency: Yup.string().required("required"),
  personCompletingReport: Yup.string().required("required"),
  agencySocialWorkerInvolved: Yup.string().required("required"),
  childLocalAuthority: Yup.string().required("required"),
  carerLocalAuthority: Yup.string().required("required"),
  complaintDetails: Yup.string().required("required"),
  independentSupportInfo: Yup.string().required("required"),
  agencyActionTaken: Yup.string().required("required"),
  complaintOutcome: Yup.string().required("required"),
  isThisSubstained: Yup.string().required("required"),
  teamManagerRecommendation: Yup.string().required("required"),
  hasRegisteredManagerInformed: Yup.boolean().required("required"),
  registeredManagerInformedDate: Yup.date().required("required"),
  hasOfstedBeenInformed: Yup.boolean().required("required"),
  ofstedNotifiedDate: Yup.date().required("required"),
  isSchedule: Yup.boolean().required("required"),
  reportedTo: Yup.string().required("required"),
  registeredManagerRecommendation: Yup.string().required("required"),
  closureDate: Yup.date().required("required"),
  nextAlertDate: Yup.date().required("required"),
  investigationUndertaken: Yup.string().required("required"),
});
