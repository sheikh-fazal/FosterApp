import {
  RHFCheckbox,
  RHFSelect,
  RHFTextField,
} from "@root/components/hook-form";
import RHFDatePicker from "@root/components/hook-form/RHFDatePicker";
import RHFRadioGroupWithLabel from "@root/components/hook-form/RHFRadioGroupWithLabel";
import * as Yup from "yup";
export const dummy = [
  {
    DateofIncident: "12-12-21, 11:59",
    Status: "In progress",
    dateofDeath: "12-12-21",
    Location: "London, Uk",
  },
];

export const OFsedFromData = [
  {
    id: 1,
    gridLength: 6,
    otherOptions: {
      label: "Date of incident",
      name: "dateofIncident",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 2,
    gridLength: 6,
    otherOptions: {
      label: "Location",
      name: "location",
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 3,
    gridLength: 6,
    otherOptions: {
      label: "Reason for Notification:",
      name: "reasonforNotification",
      fullWidth: true,
      select: true,
      options: [
        { value: "Request for Single Data", label: "Request for Single Data" },
      ],
    },
    component: RHFSelect,
  },
  {
    id: 4,
    gridLength: 12,
    otherOptions: {
      label: "Cause of Death (if applicable/known)",
      name: "causeOfDeath",
      multiline: true,
      minRows: 3,
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 5,
    gridLength: 6,
    otherOptions: {
      label: "Date of Death",
      name: "dateOfDeath",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 6,
    gridLength: 6,
    otherOptions: {
      label: "Will there be an inquest or Post-mortem?:",
      name: "WillPostNortem",
      fullWidth: true,
      select: true,
      options: [
        { value: "Request for Single Data", label: "Request for Single Data" },
      ],
    },
    component: RHFSelect,
  },
  {
    id: 7,
    gridLength: 12,
    otherOptions: {
      label: "Names and Job Titles of staff on  Duty:",
      name: "NamesAndJobTitlesOfStaffOnDuty",
      multiline: true,
      minRows: 3,
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 8,
    gridLength: 12,
    otherOptions: {
      label:
        "Description of incident. Pleease provide details of the incident: ",
      name: "DescriptionOfIncidentPleaseProvide",
      multiline: true,
      minRows: 3,
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 9,
    gridLength: 6,
    otherOptions: {
      label: "Was the GP Called:",
      name: "WasTheGPCalled",
      fullWidth: true,
      select: true,
      options: [
        { value: "Request for Single Data", label: "Request for Single Data" },
      ],
    },
    component: RHFSelect,
  },
  {
    id: 10,
    gridLength: 6,
    otherOptions: {
      label: "Date",
      name: "GbDate",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 11,
    gridLength: 6,
    otherOptions: {
      label: "Was the Emergency Services Called:",
      name: "wasTheEmergencyServicesCalled",
      fullWidth: true,
      select: true,
      options: [
        { value: "Request for Single Data", label: "Request for Single Data" },
      ],
    },
    component: RHFSelect,
  },
  {
    id: 12,
    gridLength: 6,
    otherOptions: {
      label: "Date",
      name: "wasTheEmergencyServicesCalledDate",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 13,
    gridLength: 6,
    otherOptions: {
      label: "Service Name",
      name: "serviceName",
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 14,
    gridLength: 6,
    otherOptions: {
      fullWidth: true,
      name: "PlacingAuthorityPersonNotified",
      label: "Placing authority (all events) Person Notified",
    },
    component: RHFCheckbox,
  },
  {
    id: 15,
    gridLength: 6,
    otherOptions: {
      label: "Date",
      name: "DateSecretary",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 16,
    gridLength: 6,
    otherOptions: {
      fullWidth: true,
      name: "SecretaryOfStatePersonNotified",
      label: "Secretary of state (an only) Person Notified",
    },
    component: RHFCheckbox,
  },
  {
    id: 17,
    gridLength: 6,
    otherOptions: {
      label: "Date",
      name: "DateAreaAuthorityNotified",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 18,
    gridLength: 6,
    otherOptions: {
      fullWidth: true,
      name: "AreaAuthorityNotified",
      label: "Area Authority (a & f) Person Notified",
    },
    component: RHFCheckbox,
  },
  {
    id: 19,
    gridLength: 6,
    otherOptions: {
      label: "Date",
      name: "DateHealthAuthorityPersonNotified",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 20,
    gridLength: 6,
    otherOptions: {
      fullWidth: true,
      name: "HealthAuthorityPersonNotified",
      label: "Health Authority (a & d) Person Notified",
    },
    component: RHFCheckbox,
  },
  {
    id: 21,
    gridLength: 6,
    otherOptions: {
      label: "Date",
      name: "DatePolicePersonNotified",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 22,
    gridLength: 6,
    otherOptions: {
      fullWidth: true,
      name: "PolicePersonNotified",
      label: "Police (e & d) Person Notified",
    },
    component: RHFCheckbox,
  },
  {
    id: 23,
    gridLength: 6,
    otherOptions: {
      label: "Date",
      name: "DateHaveParentsbeenNotified",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 24,
    gridLength: 6,
    otherOptions: {
      fullWidth: true,
      name: "HaveParentsbeenNotified",
      label: "Have parents been notified (if applicable)?",
    },
    component: RHFCheckbox,
  },
  {
    id: 25,
    gridLength: 6,
    otherOptions: {
      label: "Date",
      name: "DateChiefInspectorPersonNotified",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 26,
    gridLength: 6,
    otherOptions: {
      fullWidth: true,
      name: "ChiefInspectorPersonNotified",
      label: "Chief inspector person Notified",
    },
    component: RHFCheckbox,
  },
  {
    id: 27,
    gridLength: 6,
    otherOptions: {
      label: "Date",
      name: "DatePrimaryCareTrustPersonNotified",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 28,
    gridLength: 6,
    otherOptions: {
      fullWidth: true,
      name: "PrimaryCareTrustPersonNotified",
      label: "Primary Care Trust Person Notified",
    },
    component: RHFCheckbox,
  },
  {
    id: 29,
    otherOptions: {
      name: "ActionsToBeTakenToPreventFurtherOccurrence",
      label: "Actions to be taken to Prevent further Occurrence:",
      multiline: true,
      minRows: 3,
      fullWidth: true,
    },
    gridLength: 12,
    component: RHFTextField,
  },
  {
    id: 30,
    otherOptions: {
      name: "UseThisBoxIfYouNeed",
      label:
        "Use this box if you need more space to provide us with any additional Information. Please use peoples initials only:",
      multiline: true,
      minRows: 3,
      fullWidth: true,
    },
    gridLength: 12,
    component: RHFTextField,
  },
  {
    id: 31,
    otherOptions: {
      name: "DetailsOfChildIfApplicable",
      label:
        "Details of Child(ren) if applicable, Include date of birth and use only initials:",
      multiline: true,
      minRows: 3,
      fullWidth: true,
    },
    gridLength: 12,
    component: RHFTextField,
  },
  {
    id: 32,
    otherOptions: {
      name: "PlacingAuthorityIfApplicable",
      label: "Placing authority(ies) if applicable:",
      multiline: true,
      minRows: 3,
      fullWidth: true,
    },
    gridLength: 12,
    component: RHFTextField,
  },
  {
    id: 33,
    otherOptions: {
      fullWidth: true,
      name: "ClosureDate",
      label: "Closure Date",
    },
    gridLength: 6,
    component: RHFDatePicker,
  },
];
export const OFsedValue = {
  dateofIncident: new Date(),
  location: "",
  reasonforNotification: "",
  causeOfDeath: "",
  dateOfDeath: new Date(),
  WillPostNortem: "",
  NamesAndJobTitlesOfStaffOnDuty: "",
  DescriptionOfIncidentPleaseProvide: "",
  WasTheGPCalled: "",
  GbDate: new Date(),
  wasTheEmergencyServicesCalled: "",
  wasTheEmergencyServicesCalledDate: new Date(),
  serviceName: "",
  PlacingAuthorityPersonNotified: "",
  DateSecretary: new Date(),
  SecretaryOfStatePersonNotified: "",
  DateAreaAuthorityNotified: new Date(),
  AreaAuthorityNotified: "",
  DateHealthAuthorityPersonNotified: new Date(),
  HealthAuthorityPersonNotified: "",
  DatePolicePersonNotified: new Date(),
  PolicePersonNotified: "",
  DateHaveParentsbeenNotified: new Date(),
  HaveParentsbeenNotified: "",
  DateChiefInspectorPersonNotified: new Date(),
  ChiefInspectorPersonNotified: "",
  DatePrimaryCareTrustPersonNotified: new Date(),
  PrimaryCareTrustPersonNotified: "",
  ActionsToBeTakenToPreventFurtherOccurrence: "",
  UseThisBoxIfYouNeed: "",
  DetailsOfChildIfApplicable: "",
  PlacingAuthorityIfApplicable: "",
  ClosureDate: new Date(),
};
export const FormSchema = Yup.object().shape({
  dateofIncident: Yup.date().required("required"),
  location: Yup.string().required("required"),
  reasonforNotification: Yup.string().required("required"),
  causeOfDeath: Yup.string().required("required"),
  dateOfDeath: Yup.date().required("required"),
  WillPostNortem: Yup.string().required("required"),
  NamesAndJobTitlesOfStaffOnDuty: Yup.string().required("required"),
  DescriptionOfIncidentPleaseProvide: Yup.string().required("required"),
  WasTheGPCalled: Yup.string().required("required"),
  GbDate: Yup.date().required("required"),
  wasTheEmergencyServicesCalled: Yup.string().required("required"),
  wasTheEmergencyServicesCalledDate: Yup.date().required("required"),
  serviceName: Yup.string().required("required"),
  PlacingAuthorityPersonNotified: Yup.string().required("required"),
  DateSecretary: Yup.date().required("required"),
  SecretaryOfStatePersonNotified: Yup.string().required("required"),
  DateAreaAuthorityNotified: Yup.date().required("required"),
  AreaAuthorityNotified: Yup.string().required("required"),
  DateHealthAuthorityPersonNotified: Yup.date().required("required"),
  HealthAuthorityPersonNotified: Yup.string().required("required"),
  DatePolicePersonNotified: Yup.date().required("required"),
  PolicePersonNotified: Yup.string().required("required"),
  DateHaveParentsbeenNotified: Yup.date().required("required"),
  HaveParentsbeenNotified: Yup.string().required("required"),
  DateChiefInspectorPersonNotified: Yup.date().required("required"),
  ChiefInspectorPersonNotified: Yup.string().required("required"),
  DatePrimaryCareTrustPersonNotified: Yup.date().required("required"),
  PrimaryCareTrustPersonNotified: Yup.string().required("required"),
  ActionsToBeTakenToPreventFurtherOccurrence: Yup.string().required("required"),
  UseThisBoxIfYouNeed: Yup.string().required("required"),
  DetailsOfChildIfApplicable: Yup.string().required("required"),
  PlacingAuthorityIfApplicable: Yup.string().required("required"),
  ClosureDate: Yup.date().required("required"),
});
