import { RHFSelect, RHFTextField } from "@root/components/hook-form";
import RHFDatePicker from "@root/components/hook-form/RHFDatePicker";
import RHFRadioGroupBoolean from "@root/components/hook-form/RHFRadioGroupBoolean";
import * as Yup from "yup";

export const ChildIncidentsReportFormFields = [
  {
    id: 1,
    gridLength: 6,
    otherOptions: {
      name: "urnNumber",
      label: "URN Number",
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 2,
    gridLength: 6,
    otherOptions: {
      name: "personNotifiedToAgency",
      label: "Person Notified to Agency",
      fullWidth: true,
      select: true,
    },
    options: [{ value: "nil", label: "nil" }],
    component: RHFSelect,
  },
  {
    id: 3,
    gridLength: 6,
    otherOptions: {
      name: "children",
      label: "Select Children",
      fullWidth: true,
      select: true,
    },
    options: [{ value: "nil", label: "nil" }],
    component: RHFSelect,
  },
  {
    id: 4,
    gridLength: 6,
    otherOptions: {
      name: "incidentDate",
      label: "Incident Date",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 5,
    gridLength: 6,
    otherOptions: {
      name: "agencyReportedDate",
      label: "Agency reported Date",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 6,
    gridLength: 6,
    otherOptions: {
      name: "reviewDate",
      label: "Review Date",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 7,
    gridLength: 12,
    otherOptions: {
      name: "natureOfIncident",
      label: "Nature of Incident",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  // {
  //   id: 8,
  //   gridLength: 6,
  //   otherOptions: {
  //     name: "personNotifiedToAgency",
  //     label: "Person Notified to Agency",
  //     fullWidth: true,
  //   },
  //   component: RHFTextField,
  // },
  {
    id: 9,
    gridLength: 6,
    otherOptions: {
      name: "personCompletingReport",
      label: "Person Completing Report",
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 10,
    gridLength: 6,
    otherOptions: {
      name: "agencySocialWorkerInvolved",
      label: "Agency Social Worker Involved",
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 11,
    gridLength: 6,
    otherOptions: {
      name: "childLA",
      label: "Child Local Authority",
      fullWidth: true,
      select: true,
    },
    options: [{ value: "nil", label: "nil" }],
    component: RHFSelect,
  },
  {
    id: 12,
    gridLength: 6,
    otherOptions: {
      name: "carerLA",
      label: "Carer Local Authority",
      fullWidth: true,
      select: true,
    },
    options: [{ value: "nil", label: "nil" }],
    component: RHFSelect,
  },
  {
    id: 13,
    gridLength: 12,
    otherOptions: {
      name: "incidentDetails",
      label: "Incident Details",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 14,
    gridLength: 12,
    otherOptions: {
      name: "agencyActionTaken",
      label: "Action Taken by Agency",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 15,
    gridLength: 12,
    otherOptions: {
      name: "carerActionTaken",
      label: "Action Taken by Carer",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 16,
    gridLength: 12,
    otherOptions: {
      name: "reportedTo",
      label: "Reported To",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 17,
    gridLength: 12,
    otherOptions: {
      name: "incidentOutcome",
      label: "Incident Outcome",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 18,
    gridLength: 12,
    otherOptions: {
      name: "actionTaken",
      label: "Action Taken",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 19,
    gridLength: 12,
    otherOptions: {
      name: "teamManagerComments",
      label: "Team Manager Comments",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 20,
    gridLength: 6,
    otherOptions: {
      label: "Has Registered Manager Informed",
      name: "hasRegManagInformed",
    },
    component: RHFRadioGroupBoolean,
  },
  {
    id: 21,
    gridLength: 6,
    otherOptions: {
      name: "regManagInformedDate",
      label: "Registered Manager Informed Date",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 22,
    gridLength: 12,
    otherOptions: {
      name: "regManagRecomd",
      label: "Registered Manager Recommendation",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 23,
    gridLength: 6,
    otherOptions: {
      label: "Has Ofsted Manager Informed",
      name: "hasOfstedInformed",
    },
    component: RHFRadioGroupBoolean,
  },
  {
    id: 24,
    gridLength: 6,
    otherOptions: {
      name: "ofstedFormFilledDate",
      label: "Ofsted Online Form Filled Date",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },

  {
    id: 25,
    gridLength: 6,
    otherOptions: {
      label: "Is Schedule?",
      name: "isScheduled",
    },
    component: RHFRadioGroupBoolean,
  },
  {
    id: 26,
    gridLength: 12,
    otherOptions: {
      name: "ofstedActionTaken",
      label: "Ofsted Action Taken",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },

  {
    id: 27,
    gridLength: 6,
    otherOptions: {
      name: "closureDate",
      label: "Closure Date",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 28,
    gridLength: 6,
    otherOptions: {
      name: "nextAlertDate",
      label: "Next Alert Date",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 29,
    gridLength: 12,
    otherOptions: {
      name: "hospitalAdmission",
      label: "Hospital Admission",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 30,
    gridLength: 12,
    otherOptions: {
      name: "sectionOffence",
      label: "Section 47 Offence",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 31,
    gridLength: 12,
    otherOptions: {
      name: "deathRecord",
      label: "Death Record",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 32,
    gridLength: 12,
    otherOptions: {
      label: "Was Independent support offered during investigation?",
      name: "independentSupportOffered",
    },
    component: RHFRadioGroupBoolean,
  },
  {
    id: 33,
    gridLength: 12,
    otherOptions: {
      name: "independentSupportOfferedInfo",
      label: "Independent Support Offered Info",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 34,
    gridLength: 12,
    otherOptions: {
      label: "Has Discussion with LADO taken place?",
      name: "discucssionWithLADOTaken",
    },
    component: RHFRadioGroupBoolean,
  },
  {
    id: 35,
    gridLength: 12,
    otherOptions: {
      name: "LADOComments",
      label: "LADO Comments",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 36,
    gridLength: 12,
    otherOptions: {
      name: "followUpPlan",
      label: "Follow up Plan",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
];
export const defaultValues = {
  urnNumber: "Nil",
  children: null,
  incidentDate: null,
  agencyReportedDate: null,
  reviewDate: null,
  natureOfIncident: "Nil",
  personNotifiedToAgency: null,
  personCompletingReport: "Nil",
  agencySocialWorkerInvolved: "Nil",
  childLA: null,
  carerLA: null,
  incidentDetails: "Nil",
  agencyActionTaken: "Nil",
  carerActionTaken: "Nil",
  reportedTo: "Nil",
  incidentOutcome: "Nil",
  actionTaken: "Nil",
  teamManagerComments: "Nil",
  hasRegManagInformed: true,
  regManagInformedDate: null,
  regManagRecomd: "Nil",
  hasOfstedInformed: true,
  ofstedFormFilledDate: null,
  isScheduled: true,
  ofstedActionTaken: "Nil",
  closureDate: null,
  nextAlertDate: null,
  hospitalAdmission: "Nil",
  sectionOffence: "Nil",
  deathRecord: "Nil",
  independentSupportOffered: true,
  independentSupportOfferedInfo: "Nil",
  discucssionWithLADOTaken: true,
  LADOComments: "Nil",
  followUpPlan: "Nil",
};
export const formatters: any = {};

export const formSchema = Yup.object().shape({
  urnNumber: Yup.string().required("Required"),
  children: Yup.string().required("Required"),
  incidentDate: Yup.date().required("Required"),
  agencyReportedDate: Yup.date().required("Required"),
  reviewDate: Yup.date().required("Required"),
  natureOfIncident: Yup.string().required("Required"),
  personNotifiedToAgency: Yup.string().required("Required"),
  personCompletingReport: Yup.string().required("Required"),
  agencySocialWorkerInvolved: Yup.string().required("Required"),
  childLA: Yup.string().required("Required"),
  carerLA: Yup.string().required("Required"),
  incidentDetails: Yup.string().required("Required"),
  agencyActionTaken: Yup.string().required("Required"),
  carerActionTaken: Yup.string().required("Required"),
  reportedTo: Yup.string().required("Required"),
  incidentOutcome: Yup.string().required("Required"),
  actionTaken: Yup.string().required("Required"),
  teamManagerComments: Yup.string().required("Required"),
  // regManagInformedDate: Yup.date().required("Required"),
  regManagRecomd: Yup.string().required("Required"),
  // ofstedFormFilledDate: Yup.date().required("Required"),
  ofstedActionTaken: Yup.string().required("Required"),
  closureDate: Yup.date().required("Required"),
  nextAlertDate: Yup.date().required("Required"),
  hospitalAdmission: Yup.string().required("Required"),
  sectionOffence: Yup.string().required("Required"),
  deathRecord: Yup.string().required("Required"),
  independentSupportOfferedInfo: Yup.string().required("Required"),
  LADOComments: Yup.string().required("Required"),
  followUpPlan: Yup.string().required("Required"),
});
