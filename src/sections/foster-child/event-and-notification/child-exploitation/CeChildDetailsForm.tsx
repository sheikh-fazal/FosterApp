import { LoadingButton } from "@mui/lab";
import { Button, Grid, Typography, useTheme } from "@mui/material";
import { FormProvider } from "@root/components/hook-form";
import Link from "next/link";
import { useRouter } from "next/router";
import React from "react";
import { ChildDetailsFormData } from ".";
import { useSchoolDetailInfoForm } from "../../education-records/school-detail-info/useSchoolDetailInfoForm";
import { useCeChildDetailsForm } from "./useCeChildDetailsForm";

export default function CeChildDetailsForm(props: any) {
  const theme = useTheme();
  const router = useRouter();
  const { disabled } = props;
  const {
    methods,
    // handleSubmit,
    // onSubmit,
    // isSubmitting,
    // isError,
    // isSuccess,
    // isLoading,
  } = useCeChildDetailsForm();

  return (
    <FormProvider methods={methods} onSubmit={()=>{}}>
      <Grid container spacing={4}>
        {ChildDetailsFormData?.map((item) => (
          <Grid item xs={12} md={item?.md} key={item?.id}>
            <Typography color={theme.palette.primary.main} variant="body2">
              {item.heading}
            </Typography>
            <item.component
              disabled={disabled}
              {...item.componentProps}
              size={"small"}
              fullWidth
            >
              {item?.componentProps?.select
                ? item?.options?.map((option: any) => (
                    <option key={option?.value} value={option?.value}>
                      {option?.label}
                    </option>
                  ))
                : null}
            </item.component>
          </Grid>
        ))}
          <Grid item xs={12}>
        {!disabled && (
            <LoadingButton
              type="submit"
              variant="contained"
              sx={{ mr: 2 }}
              // loading={isLoading}
              // color={isError ? "error" : isSuccess ? "success" : "primary"}
            >
              {/* {isError ? "Try Again!" : isSuccess ? "Success" : "Submit"} */}
            </LoadingButton>
        )}
            <Link
              href={`/foster-child/events-and-notification/child-exploitation?fosterChildId=${router?.query?.fosterChildId}`}
              style={{ textDecoration: "none" }}
            >
              <Button type="button" variant="contained">
                Back
              </Button>
            </Link>
        </Grid>
      </Grid>
    </FormProvider>
  );
}
