import { RHFTextField } from "@root/components/hook-form";
import RHFRadioGroup from "@root/components/hook-form/RHFRadioGroup";
import RHFDatePicker from "@root/components/hook-form/RHFDatePicker";
import { RHFInputWithLabel } from "@root/components/hook-form/RHFInputWithLabel";
import dayjs from "dayjs";
import * as Yup from "yup";
import { Typography } from "@mui/material";

const todayDate = dayjs().format("MM/DD/YYYY");
const maxAgeCheck = dayjs().subtract(18.1, "year");
const ageOf18Years = maxAgeCheck.format("MM/DD/YYYY");

export const MISSINGFORMUNKNOWNDATA = [
  {
    id: 1,
    componentProps: {
      name: "name",
      label: "Name of Child / Young Person",
      fullWidth: true,
    },
    gridLength: 6,
    component: RHFTextField,
  },
  {
    id: 2,
    componentProps: {
      name: "responsibleName",
      label: "Name of responsible LA",
      fullWidth: true,
    },
    gridLength: 6,
    component: RHFTextField,
  },
  {
    id: 3,
    componentProps: {
      name: "dateOfBirth",
      label: "Date of Birth",
      fullWidth: true,
      maxDate: maxAgeCheck.valueOf(),
    },
    gridLength: 6,
    component: RHFDatePicker,
  },
  {
    id: 4,
    componentProps: {
      name: "age",
      label: "Age",
      fullWidth: true,
      disabled: true,
    },
    gridLength: 6,
    component: RHFTextField,
  },
  {
    id: 5,
    componentProps: {
      name: "ethnicOrigin",
      label: "Ethnic Origin",
      fullWidth: true,
    },
    gridLength: 6,
    component: RHFTextField,
  },
  {
    id: 6,
    componentProps: {
      name: "preferredLanguage",
      label: "Preferred Language",
      fullWidth: true,
    },
    gridLength: 6,
    component: RHFTextField,
  },

  {
    id: 7,
    componentProps: {
      name: "fosterCarerName",
      text: "Name of Foster Carer(s)",
      label: "Field Value",
      fullWidth: true,
      multiline: true,
      minRows: 3,
      Component: RHFTextField,
      typographyProps: {
        variant: "body2",
        mb: "10px",
      },
    },
    gridLength: 12,
    component: RHFInputWithLabel,
  },
  {
    id: 8,
    componentProps: {
      name: "broughtFosterCarer",
      label: "Name of Borough Foster Carer(s) live in:",
      fullWidth: true,
    },
    gridLength: 6,
    component: RHFTextField,
  },
  {
    id: 9,
    componentProps: {
      name: "sswName",
      label: "Name of SSW at XXX",
      fullWidth: true,
    },
    gridLength: 6,
    component: RHFTextField,
  },
  {
    id: 10,
    componentProps: {
      name: "whereaboutsDetails",
      text: "Is this considered as missing/whereabouts not known with safety concern? if yes, please provide details",
      label: "Field Value",
      fullWidth: true,
      multiline: true,
      minRows: 3,
      Component: RHFTextField,
      typographyProps: {
        variant: "body2",
        mb: "10px",
      },
    },
    gridLength: 12,
    component: RHFInputWithLabel,
  },
  {
    id: 11,
    componentProps: {
      name: "contactedPolice",
      text: "Have you contacted Police have a CAD number? (please note that any child/young person missing for 3 days become a notifiable event at XXX; please inform your line manager and Safeguarding manager accordingly)",
      label: "Field Value",
      fullWidth: true,
      multiline: true,
      minRows: 3,
      Component: RHFTextField,
      typographyProps: {
        variant: "body2",
        mb: "10px",
      },
    },
    gridLength: 12,
    component: RHFInputWithLabel,
  },
  {
    id: 12,
    componentProps: {
      name: "personDetail",
      text: "Date and time the child/young person was last seen adn expected time to return",
      label: "Field Value",
      fullWidth: true,
      multiline: true,
      minRows: 3,
      Component: RHFTextField,
      typographyProps: {
        variant: "body2",
        mb: "10px",
      },
    },
    gridLength: 12,
    component: RHFInputWithLabel,
  },
  {
    id: 13,
    componentProps: {
      text: "Does the child/young person have recent history of any of the following? Please highlight accordingly",
      fullWidth: true,
      Component: Typography,
      typographyProps: {
        variant: "body2",
        mb: "10px",
      },
    },
    gridLength: 12,
    component: RHFInputWithLabel,
  },

  {
    id: 16,
    componentProps: {
      name: "CSERisk",
      text: "CSE Risk",
      Component: RHFRadioGroup,
      options: ["Yes", "No", "Not Known", "Possibly"],
      getOptionLabel: ["Yes", "No", "Not Known", "Possibly"],
    },
    gridProps: {
      display: "flex",
      alignItems: "center",
      justifyContent: "space-between",
      mx: "5em",
    },
    gridLength: 12,
    component: RHFInputWithLabel,
  },

  {
    id: 18,
    componentProps: {
      name: "gangInvolvement",
      text: "Involvement in Gangs",
      Component: RHFRadioGroup,
      options: ["Yes", "No", "Not Known", "Possibly"],
      getOptionLabel: ["Yes", "No", "Not Known", "Possibly"],
    },
    gridProps: {
      display: "flex",
      alignItems: "center",
      justifyContent: "space-between",
      mx: "5em",
    },
    gridLength: 12,
    component: RHFInputWithLabel,
  },
  {
    id: 19,
    componentProps: {
      name: "physicalDifficulty",
      text: "Physical/Learning difficulty",
      Component: RHFRadioGroup,
      options: ["Yes", "No", "Not Known", "Possibly"],
      getOptionLabel: ["Yes", "No", "Not Known", "Possibly"],
    },
    gridProps: {
      display: "flex",
      alignItems: "center",
      justifyContent: "space-between",
      mx: "5em",
    },
    gridLength: 12,
    component: RHFInputWithLabel,
  },
  {
    id: 20,
    componentProps: {
      name: "selfHarm",
      text: "Self-harm",
      Component: RHFRadioGroup,
      options: ["Yes", "No", "Not Known", "Possibly"],
      getOptionLabel: ["Yes", "No", "Not Known", "Possibly"],
    },
    gridProps: {
      display: "flex",
      alignItems: "center",
      justifyContent: "space-between",
      mx: "5em",
    },
    gridLength: 12,
    component: RHFInputWithLabel,
  },
  {
    id: 21,
    componentProps: {
      name: "riskToOthers",
      text: "Risk to others",
      Component: RHFRadioGroup,
      options: ["Yes", "No", "Not Known", "Possibly"],
      getOptionLabel: ["Yes", "No", "Not Known", "Possibly"],
    },
    gridProps: {
      display: "flex",
      alignItems: "center",
      justifyContent: "space-between",
      mx: "5em",
    },
    gridLength: 12,
    component: RHFInputWithLabel,
  },
  {
    id: 22,
    componentProps: {
      name: "substanceMisuse",
      text: "Substance misuse, including drugs/alcohol",
      Component: RHFRadioGroup,
      options: ["Yes", "No", "Not Known", "Possibly"],
      getOptionLabel: ["Yes", "No", "Not Known", "Possibly"],
    },
    gridProps: {
      display: "flex",
      alignItems: "center",
      justifyContent: "space-between",
      mx: "5em",
    },
    gridLength: 12,
    component: RHFInputWithLabel,
  },
  {
    id: 23,
    componentProps: {
      name: "medicalNeeds",
      text: "Any medical needs",
      Component: RHFRadioGroup,
      options: ["Yes", "No", "Not Known", "Possibly"],
      getOptionLabel: ["Yes", "No", "Not Known", "Possibly"],
    },
    gridProps: {
      display: "flex",
      alignItems: "center",
      justifyContent: "space-between",
      mx: "5em",
    },
    gridLength: 12,
    component: RHFInputWithLabel,
  },
  {
    id: 24,
    componentProps: {
      name: "riskExtremism",
      text: "Any concern of risk to Extremism/Radicalization",
      Component: RHFRadioGroup,
      options: ["Yes", "No", "Not Known", "Possibly"],
      getOptionLabel: ["Yes", "No", "Not Known", "Possibly"],
    },
    gridProps: {
      display: "flex",
      alignItems: "center",
      justifyContent: "space-between",
      mx: "5em",
    },
    gridLength: 12,
    component: RHFInputWithLabel,
  },
  {
    id: 25,
    componentProps: {
      name: "comments",
      text: "Please comment on the risks and include safety plan",
      label: "Field Value",
      fullWidth: true,
      multiline: true,
      minRows: 3,
      Component: RHFTextField,
      typographyProps: {
        variant: "body2",
        mb: "10px",
      },
    },
    gridLength: 12,
    component: RHFInputWithLabel,
  },
  {
    id: 26,
    componentProps: {
      name: "detailsUnAuthorAbsence",
      text: "Details leading up to unauthorized absence from home",
      label: "Field Value",
      fullWidth: true,
      multiline: true,
      minRows: 3,
      Component: RHFTextField,
      typographyProps: {
        variant: "body2",
        mb: "10px",
      },
    },
    gridLength: 12,
    component: RHFInputWithLabel,
  },
  {
    id: 26.5,
    componentProps: {
      text: "Please let senior managers know when the child/young person comes back, and XXX Missing from home return interview from completed and shared with the responsible LA",
      fullWidth: true,
      Component: Typography,
      typographyProps: {
        variant: "body2",
        mb: "10px",
      },
    },
    gridLength: 12,
    component: RHFInputWithLabel,
  },
  {
    id: 27,
    componentProps: {
      name: "nameCompletingForm",
      label: "Name of SSW completing this form",
      fullWidth: true,
    },
    gridLength: 6,
    component: RHFTextField,
  },
  {
    id: 28,
    componentProps: {
      name: "dateCompletion",
      label: "Date of completion",
      fullWidth: true,
    },
    gridLength: 6,
    component: RHFDatePicker,
  },
];
export const defaultValues = {
  name: "", //1
  responsibleName: "", //2
  dateOfBirth: new Date(ageOf18Years), //3
  age: "", //4
  ethnicOrigin: "", //5
  preferredLanguage: "", //6
  fosterCarerName: "", //7
  broughtFosterCarer: "", //8
  sswName: "", //9
  whereaboutsDetails: "", //10
  contactedPolice: "", //11
  personDetail: "", //--12
  CSERisk: "Yes", //13
  gangInvolvement: "Yes", //14
  physicalDifficulty: "Yes", //15
  selfHarm: "Yes", //16
  riskToOthers: "Yes", //17
  substanceMisuse: "Yes", //18
  medicalNeeds: "Yes", //19
  riskExtremism: "Yes", //20
  comments: "", //21
  detailsUnAuthorAbsence: "", //22
  nameCompletingForm: "", //23
  dateCompletion: new Date(todayDate), //24
};
export const FormSchema = Yup.object().shape({
  name: Yup.string().required("Please Enter a valid Course Type"),
  responsibleName: Yup.string().required("Please Enter a valid Duration"),
  ethnicOrigin: Yup.string().required("Please Enter a valid Information"),
  preferredLanguage: Yup.string().required("Please Enter a valid Information"),
  fosterCarerName: Yup.string().required("Please Enter a valid Information"),
  broughtFosterCarer: Yup.string().required("Please Enter a valid Information"),
  sswName: Yup.string().required("Please Enter a valid Information"),
  contactedPolice: Yup.string().required("Please Enter a valid Information"),
  personDetail: Yup.string().required("Please Enter a valid Information"),
});
