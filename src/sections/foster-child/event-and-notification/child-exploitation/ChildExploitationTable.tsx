import { Box, Card } from "@mui/material";
import TableAction from "@root/components/TableAction";
import React, { useState } from "react";
import { useChildExploitationTable } from "./useChildExploitationTable";
import TableHeader from "@root/components/TableHeader";
import CustomTable from "@root/components/Table/CustomTable";
import { useRouter } from "next/router";

export default function ChildExploitationTable(props: any) {
  const Router: any = useRouter();
  const { fosterChildId } = Router.query;
  const {
    router,
    isLoading,
    headerChangeHandler,
    family,
    isFetching,
    isError,
    isSuccess,
    meta,
    pageChangeHandler,
    // postData,
    sortChangeHandler,
  } = useChildExploitationTable();
  const columns = [
    {
      accessorFn: (row: any) => row?.fosterChildName,
      id: "schoolName",
      cell: (info: any) =>
       info.getValue(),
      header: "Child Name",
      isSortable: true,
    },
    {
      accessorFn: (row: any) => row?.principalName,
      id: "principalName",
      cell: (info: any) => info.getValue() ?? "-",
      header: "Type",
      isSortable: true,
    },
    {
      accessorFn: (row: any) => row?.principalName,
      id: "principalName",
      cell: (info: any) => info.getValue() ?? "-",
      header: "Exploitation Description Document",
      isSortable: true,
    },
    {
      id: "actions",
      cell: (info: any) => (
        <Box sx={{ display: "flex", gap: "5px", justifyContent: "center" }}>
          {/* Can move it outside of the table if need arises */}

          {/* <TableAction
                type="delete"
                onClicked={() => {
                  setOpen(true);
                  setId(info.row.original);
                }}
                size="small"
              /> */}

          {/* <TableAction
                type="edit"
                onClicked={() =>
                  router.push({
                    pathname:
                      "/foster-child/education-records/school-detail-info/edit-school-detail",
                    query: {
                      action: "edit",
                      schoolInfoId: info.row.original.id,
                      fosterChildId: fosterChildId,
                    },
                  })
                }
                size="small"
              /> */}

          <TableAction
            type="view"
            onClicked={() =>
              router.push({
                pathname:
                  "/foster-child/events-and-notification/child-exploitation/view-child-exploitation",
                query: {
                  action: "view",
                  id: info.row.original.id,
                  fosterChildId: fosterChildId,
                },
              })
            }
            size="small"
          />
        </Box>
      ),
      header: "Actions",
      isSortable: false,
    },
  ];
  return (
    <Card sx={{ p: 2 }}>
      {/* <DeleteModel
        open={open}
        handleClose={() => setOpen(false)}
        onDeleteClick={() => {
          onDelete(id);
        }}
      /> */}
      <TableHeader
        // disabled={isLoading}
        title="Child Exploitation"
        searchKey="search"
        // showAddBtn
        onAdd={() => {
          router.push({
            pathname:
              "/foster-child/education-records/school-detail-info/add-school-detail",
            query: { action: "add", fosterChildId: fosterChildId },
          });
        }}
        onChanged={headerChangeHandler}
      />
      <CustomTable
        data={family}
        columns={columns}
        isLoading={isLoading}
        isFetching={isFetching}
        isError={isError}
        isSuccess={isSuccess}
        currentPage={meta?.page ?? "1"}
        totalPages={meta?.pages ?? "1"}
        showSerialNo
        onPageChange={pageChangeHandler}
        onSortByChange={sortChangeHandler}
      />
    </Card>
  );
}
