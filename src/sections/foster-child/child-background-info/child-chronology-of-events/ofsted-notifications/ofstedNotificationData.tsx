import { RHFCheckbox, RHFSelect, RHFTextField } from "@root/components/hook-form";
import RHFDatePicker from "@root/components/hook-form/RHFDatePicker";
import * as Yup from "yup";

export const ofstedNotificationFormFields = [
  {
    id: 1,
    gridLength: 6,
    otherOptions: {
      name: "dateOfIncident",
      label: "Date of Incident",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 2,
    gridLength: 6,
    otherOptions: {
      name: "location",
      label: "Location",
      fullWidth: true,
    },
    component: RHFTextField,
  },
  {
    id: 3,
    gridLength: 6,
    otherOptions: {
      name: "reasonForNotification",
      label: "Reason for Notification",
      fullWidth: true,
      select: true,
    },
    options: [{ value: "nil", label: "nil" }],
    component: RHFSelect,
  },
  {
    id: 4,
    gridLength: 12,
    otherOptions: {
      name: "causeOfDeath",
      label: "Cause of Death (if applicable / known)",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 5,
    gridLength: 6,
    otherOptions: {
      name: "dateOfDeath",
      label: "Date of Death",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 6,
    gridLength: 6,
    otherOptions: {
      name: "inquestOrPostMortem",
      label: "Will there be an Inquest or Post-Mortem ?",
      fullWidth: true,
      select: true,
    },
    options: [
      { value: "yes", label: "Yes" },
      { value: "no", label: "No" },
    ],
    component: RHFSelect,
  },
  {
    id: 7,
    gridLength: 12,
    otherOptions: {
      name: "jobTitleOfStaffOnDuty",
      label: "Name and Job Titles of Staff on Duty",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 8,
    gridLength: 12,
    otherOptions: {
      name: "jobTitleOfWitness",
      label: "Name and Job Titles of Witness(es)",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 9,
    gridLength: 12,
    otherOptions: {
      name: "descriptionOfIncident",
      label: "Description of Incident, Please provide details of the incident",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 10,
    gridLength: 6,
    otherOptions: {
      name: "gpCalled",
      label: "Was the GP Called",
      fullWidth: true,
      select: true,
    },
    options: [
      { value: "yes", label: "Yes" },
      { value: "no", label: "No" },
    ],
    component: RHFSelect,
  },
  {
    id: 11,
    gridLength: 6,
    otherOptions: {
      name: "gpCalledDate",
      label: "Date",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 12,
    gridLength: 6,
    otherOptions: {
      name: "emergencyServicesCalled",
      label: "Emergency",
      fullWidth: true,
      select: true,
    },
    options: [
      { value: "yes", label: "Yes" },
      { value: "no", label: "No" },
    ],
    component: RHFSelect,
  },
  {
    id: 13,
    gridLength: 6,
    otherOptions: {
      name: "emergencyServicesCalledDate",
      label: "Date",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 14,
    gridLength: 12,
    otherOptions: {
      name: "serviceName",
      label: "Service Name",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 15,
    gridLength: 6,
    otherOptions: {
      name: "placingAuthorityDate",
      label: "Date",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 16,
    gridLength: 6,
    otherOptions: {
      name: "placingAuthority",
      label: "Placing Authority (all events) Person Notified",
      fullWidth: true,
    },
    component: RHFCheckbox,
  },
  {
    id: 17,
    gridLength: 6,
    otherOptions: {
      name: "secretaryOfStateDate",
      label: "Date",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 18,
    gridLength: 6,
    otherOptions: {
      name: "secretaryOfState",
      label: "Secretary of State (a only) Person Notified",
      fullWidth: true,
    },
    component: RHFCheckbox,
  },
  {
    id: 19,
    gridLength: 6,
    otherOptions: {
      name: "areaAuthorityDate",
      label: "Date",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 20,
    gridLength: 6,
    otherOptions: {
      name: "areaAuthority",
      label: "Area Authority (a & f) Person Notified",
      fullWidth: true,
    },
    component: RHFCheckbox,
  },
  {
    id: 21,
    gridLength: 6,
    otherOptions: {
      name: "healthAuthorityDate",
      label: "Date",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 22,
    gridLength: 6,
    otherOptions: {
      name: "healthAuthority",
      label: "Health Authority (a & d) Person Notified",
      fullWidth: true,
    },
    component: RHFCheckbox,
  },
  {
    id: 23,
    gridLength: 6,
    otherOptions: {
      name: "policePersonNotifiedDate",
      label: "Date",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 24,
    gridLength: 6,
    otherOptions: {
      name: "policePersonNotified",
      label: "Police (e &d) Person Notified",
      fullWidth: true,
    },
    component: RHFCheckbox,
  },
  {
    id: 25,
    gridLength: 6,
    otherOptions: {
      name: "parentsNotifiedDate",
      label: "Date",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 26,
    gridLength: 6,
    otherOptions: {
      name: "parentsNotified",
      label: "Have Parents been Notified (if applicable) ?",
      fullWidth: true,
    },
    component: RHFCheckbox,
  },
  {
    id: 27,
    gridLength: 6,
    otherOptions: {
      name: "inspectorNotifiedDate",
      label: "Date",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 28,
    gridLength: 6,
    otherOptions: {
      name: "inspectorNotified",
      label: "Chief Inspector Person Notified",
      fullWidth: true,
    },
    component: RHFCheckbox,
  },
  {
    id: 29,
    gridLength: 6,
    otherOptions: {
      name: "trustPersonNotifiedDate",
      label: "Date",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
  {
    id: 30,
    gridLength: 6,
    otherOptions: {
      name: "trustPersonNotified",
      label: "Primary Care Trust Person Notified",
      fullWidth: true,
    },
    component: RHFCheckbox,
  },
  ///////
  {
    id: 31,
    gridLength: 12,
    otherOptions: {
      name: "outcomeOfIncident",
      label: "Outcome of Incident",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 32,
    gridLength: 12,
    otherOptions: {
      name: "actionsToPrevent",
      label: "Actions to be taken to Prevent further Occurence",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 83,
    gridLength: 12,
    otherOptions: {
      name: "additionalInformation",
      label:
        "Use this box if you need more space to provide us with any additional information. Please use people's initials only",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 33,
    gridLength: 12,
    otherOptions: {
      name: "detailsOfChildren",
      label: "Details of Child(ren) if applicabe, include date of Birth and use only Initials",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 34,
    gridLength: 12,
    otherOptions: {
      name: "placingAuthorities",
      label: "Placing Authority(ies) if applicable",
      fullWidth: true,
      multiline: true,
      minRows: 2,
    },
    component: RHFTextField,
  },
  {
    id: 35,
    gridLength: 6,
    otherOptions: {
      name: "closureDate",
      label: "Closure Date",
      fullWidth: true,
    },
    component: RHFDatePicker,
  },
];
export const defaultValues = {
  dateOfIncident: null,
  location: "Nil",
  reasonForNotification: null,
  causeOfDeath: "Nil",
  dateOfDeath: null,
  inquestOrPostMortem: null,
  jobTitleOfStaffOnDuty: "Nil",
  jobTitleOfWitness: "Nil",
  descriptionOfIncident: "Nil",
  gpCalled: null,
  gpCalledDate: new Date(),
  emergencyServicesCalled: null,
  emergencyServicesCalledDate: new Date(),
  serviceName: "Nil",
  placingAuthorityDate: new Date(),
  placingAuthority: false,
  secretaryOfStateDate: new Date(),
  secretaryOfState: false,
  areaAuthorityDate: new Date(),
  areaAuthority: false,
  healthAuthorityDate: new Date(),
  healthAuthority: false,
  policePersonNotifiedDate: new Date(),
  policePersonNotified: false,
  parentsNotifiedDate: new Date(),
  parentsNotified: false,
  inspectorNotifiedDate: new Date(),
  inspectorNotified: false,
  trustPersonNotifiedDate: new Date(),
  trustPersonNotified: false,
  outcomeOfIncident: "Nil",
  actionsToPrevent: "Nil",
  additionalInformation: "Nil",
  detailsOfChildren: "Nil",
  placingAuthorities: "Nil",
  closureDate: new Date(),
};
export const formatters: any = {};

export const formSchema = Yup.object().shape({
  dateOfIncident: Yup.date().required("Required"),
  location: Yup.string().required("Required"),
  reasonForNotification: Yup.string().required("Required"),
  dateOfDeath: Yup.date().required("Required"),
  inquestOrPostMortem: Yup.string().required("Required"),
  jobTitleOfStaffOnDuty: Yup.string().required("Required"),
  jobTitleOfWitness: Yup.string().required("Required"),
  descriptionOfIncident: Yup.string().required("Required"),
  gpCalled: Yup.string().required("Required"),
  // gpCalledDate: Yup.date().required("Required"),
  emergencyServicesCalled: Yup.string().required("Required"),
  // emergencyServicesCalledDate: Yup.date().required("Required"),
  serviceName: Yup.string().required("Required"),
  outcomeOfIncident: Yup.string().required("Required"),
  actionsToPrevent: Yup.string().required("Required"),
  closureDate: Yup.date().required("Required"),
});
